---
- name: dependency provisioning
  hosts: all
  gather_facts: false
  tasks:
    - name: install python2
      become: yes
      become_method: sudo
      raw: sudo apt-get -y install python-simplejson

- name: Real provisioning
  hosts: all 
  become: yes
  become_method: sudo
  vars:
    go_dir: "/usr/local/go/bin"
    go_home_dir: "{{ lookup('env','HOME') }}/go"
    project_dir: "{{ go_home_dir }}/src/github.com/alex1ai/ugr-master-cc"
    port_nr: 3000
    packages: ["git", "daemon"]
  environment:
    PORT: "{{ port_nr }}"
    IP: "0.0.0.0"
    GOPATH: "{{ lookup('env','HOME') }}/go"
    MONGO_IP: "192.168.50.2"
  tasks:
  - name: install system updates for centos systems
    become: yes
    become_method: sudo
    yum: name=* state=latest update_cache=yes
    when: ansible_facts['os_family'] == "RedHat"

  - name: install system updates for debian-based systems
    become: yes
    become_method: sudo
    apt: upgrade=dist update_cache=yes cache_valid_time=3000
    when: ansible_facts['os_family'] == "Debian"

  - name: Install git 
    become: true
    become_method: sudo
    action: >
      {{ ansible_pkg_mgr }} name=git state=present
  
  - name: Install daemon on debian based system
    become: true
    become_method: sudo
    apt: name=daemon state=present
    when: ansible_facts['os_family'] == "Debian"

  - name: Download and extract Go
    become: true
    become_method: sudo
    unarchive:
      src: https://dl.google.com/go/go1.11.2.linux-amd64.tar.gz
      dest: /usr/local/
      remote_src: yes
      creates: /usr/local/go

  - name: Add Go-binary to environment
    become: true
    become_method: sudo
    file:
      dest: '/usr/bin/go'
      src: '{{ go_dir }}/go'
      state: link

  - name: Create Source Path for Github-Project
    file:
      path: "{{ project_dir }}"
      state: directory
      mode: 0755

  - name: Clone Repository from Github into Go-Directory
    git:
      repo: 'https://github.com/alex1ai/ugr-master-cc.git'
      dest: "{{ project_dir }}"


  - name: "Add Portforwarding from 80 to {{ port_nr }}"
    become: true
    become_method: sudo
    command: "iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports {{ port_nr }}"

  - name: Get dependencies for project
    command:
      cmd: "go get -d"
      chdir: "{{ project_dir }}"

  - name: Install project
    command:
      cmd: "go install"
      chdir: "{{ project_dir }}"
  
  - name: Kill old server if running
    shell: "if pgrep ugr-master-cc; then pkill ugr-master-cc; fi"

  - name: Run webservice in different process
    shell: "daemon -- {{ go_home_dir }}/bin/ugr-master-cc || nohup {{ go_home_dir }}/bin/ugr-master-cc > /dev/null 2>&1 &" 
    ignore_errors: true
